{
  "title": "Mock Text Generator",
  "description": "Useful for when you want a text generator for testing purposes",
  "edges": [
    {
      "from": "runJavascript-3",
      "to": "output-2",
      "out": "result",
      "in": "text"
    },
    {
      "from": "input-1",
      "to": "runJavascript-3",
      "out": "text",
      "in": "text"
    },
    {
      "from": "input-1",
      "to": "runJavascript-3",
      "out": "useStreaming",
      "in": "useStreaming"
    }
  ],
  "nodes": [
    {
      "id": "output-2",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "description": "The generated text",
              "title": "TexT"
            }
          },
          "required": [
            "text"
          ],
          "additionalProperties": false
        }
      }
    },
    {
      "id": "runJavascript-3",
      "type": "runJavascript",
      "configuration": {
        "name": "runMockModel",
        "code": "function runMockModel({text,useStreaming}){text=`Mock model with streaming off echoes back: ${text}`;if(useStreaming){const list=text.split(\" \");return{list}}return{text}}",
        "raw": true
      }
    },
    {
      "id": "input-1",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "description": "The text to generate from",
              "title": "Text"
            },
            "useStreaming": {
              "type": "boolean",
              "description": "Whether to stream the output",
              "title": "Stream"
            }
          },
          "required": [
            "text",
            "useStreaming"
          ],
          "additionalProperties": false
        }
      }
    }
  ],
  "graphs": {}
}