{
  "title": "Text Generator",
  "description": "This is a text generator. It can generate text using various LLMs. Currently, it supports the follwogin models: Google PaLM text-bison-001, OpenAI GPT-3.5 Turbo, and a mock model. The mock model simply echoes back the input text. It's good for testing.",
  "version": "0.0.1",
  "edges": [
    {
      "from": "secrets-3",
      "to": "palm-generateText-2",
      "out": "PALM_KEY",
      "in": "PALM_KEY"
    },
    {
      "from": "input",
      "to": "runJavascript-1",
      "out": "model",
      "in": "model"
    },
    {
      "from": "gpt35",
      "to": "output",
      "out": "text",
      "in": "text"
    },
    {
      "from": "input",
      "to": "gpt35",
      "out": "text",
      "in": "text"
    },
    {
      "from": "palm-generateText-2",
      "to": "output",
      "out": "completion",
      "in": "text"
    },
    {
      "from": "input",
      "to": "palm-generateText-2",
      "out": "text",
      "in": "text"
    },
    {
      "from": "mockModel",
      "to": "output",
      "out": "text",
      "in": "text"
    },
    {
      "from": "input",
      "to": "mockModel",
      "out": "text",
      "in": "text"
    },
    {
      "from": "runJavascript-1",
      "to": "output",
      "out": "other",
      "in": "text"
    },
    {
      "from": "runJavascript-1",
      "to": "palm-generateText-2",
      "out": "palm",
      "in": "palm"
    },
    {
      "from": "runJavascript-1",
      "to": "gpt35",
      "out": "gpt35",
      "in": "gpt35"
    },
    {
      "from": "runJavascript-1",
      "to": "mockModel",
      "out": "mock",
      "in": "mock"
    }
  ],
  "nodes": [
    {
      "id": "input",
      "type": "input",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "title": "Text",
              "description": "The text to generate"
            },
            "stream": {
              "type": "boolean",
              "title": "Stream",
              "description": "Whether to stream the output",
              "default": false
            },
            "model": {
              "type": "string",
              "title": "Model",
              "description": "The model to use for generation",
              "enum": [
                "PaLM",
                "GPT 3.5 Turbo",
                "mock"
              ],
              "default": "PaLM"
            }
          }
        }
      }
    },
    {
      "id": "runJavascript-1",
      "type": "runJavascript",
      "configuration": {
        "name": "switchModel",
        "code": "function switchModel({model}){switch(model){case\"PaLM\":return{palm:true};case\"mock\":return{mock:true};case\"GPT 3.5 Turbo\":return{gpt35:true};default:return{other:`Unsupported model: ${model}`}}}",
        "raw": true
      }
    },
    {
      "id": "palm-generateText-2",
      "type": "palm-generateText"
    },
    {
      "id": "secrets-3",
      "type": "secrets",
      "configuration": {
        "keys": [
          "PALM_KEY"
        ]
      }
    },
    {
      "id": "gpt35",
      "type": "invoke",
      "configuration": {
        "path": "openai-gpt-35-turbo.json"
      }
    },
    {
      "id": "mockModel",
      "type": "runJavascript",
      "configuration": {
        "name": "runMockModel",
        "code": "function runMockModel({text}){return{text:`Mock model echoes back: ${text}`}}",
        "raw": true
      }
    },
    {
      "id": "output",
      "type": "output",
      "configuration": {
        "schema": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string",
              "title": "Text",
              "description": "The generated text"
            }
          }
        }
      }
    }
  ],
  "kits": [
    {
      "url": "npm:@google-labs/palm-kit"
    },
    {
      "url": "npm:@google-labs/llm-starter"
    },
    {
      "url": "npm:@google-labs/core-kit"
    }
  ]
}